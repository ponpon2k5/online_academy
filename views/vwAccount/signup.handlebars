{{#fill_section "js"}}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  async function validateForm() {
    const username = document.querySelector('#txtUsername').value.trim();
    const password = document.querySelector('#txtPassword').value;
    const confirm = document.querySelector('#txtConfirm').value;
    const name = document.querySelector('#txtName').value.trim();
    const birthday = document.querySelector('#txtBirthday').value;
    const email = document.querySelector('#txtEmail').value.trim();
    const permission = document.querySelector('#selPermission').value;

    // Kiểm tra rỗng
    if (!username || !password || !confirm || !name || !birthday || !email) {
      Swal.fire({
        title: 'Lỗi!',
        text: 'Vui lòng điền đầy đủ tất cả các trường.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return false;
    }

    // Kiểm tra mật khẩu trùng khớp
    if (password !== confirm) {
      Swal.fire({
        title: 'Lỗi!',
        text: 'Mật khẩu và xác nhận mật khẩu phải giống nhau.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return false;
    }

    // Kiểm tra độ dài mật khẩu
    if (password.length < 6) {
      Swal.fire({
        title: 'Lỗi!',
        text: 'Mật khẩu phải có ít nhất 6 ký tự.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return false;
    }

    // Kiểm tra ngày sinh hợp lệ
    if (isNaN(Date.parse(birthday))) {
      Swal.fire({
        title: 'Lỗi!',
        text: 'Ngày sinh không hợp lệ.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return false;
    }

    try {
      // Kiểm tra username trùng
      const responseUsername = await fetch(`/account/is-available?username=${encodeURIComponent(username)}`);
      const dataUsername = await responseUsername.json();
      if (!dataUsername.isAvailable) {
        Swal.fire({
          title: 'Lỗi!',
          text: 'Tên người dùng đã tồn tại.',
          icon: 'error',
          confirmButtonText: 'OK'
        });
        return false;
      }

      // Kiểm tra email trùng
      const responseEmail = await fetch(`/account/is-email-available?email=${encodeURIComponent(email)}`);
      const dataEmail = await responseEmail.json();
      if (!dataEmail.isAvailable) {
        Swal.fire({
          title: 'Lỗi!',
          text: 'Email đã tồn tại.',
          icon: 'error',
          confirmButtonText: 'OK'
        });
        return false;
      }

      // ✅ Trả về dữ liệu hợp lệ
      return {
        username,
        password,
        name,
        email,
        dob: birthday,
        permission: permission // ← thêm dòng này để gửi quyền lên server
      };
    } catch (err) {
      console.error('Lỗi:', err);
      Swal.fire({
        title: 'Lỗi!',
        text: 'Đã xảy ra lỗi. Vui lòng thử lại sau.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return false;
    }
  }

  document.querySelector('#btnSendOTP').addEventListener('click', async function (event) {
    event.preventDefault();
    const data = await validateForm();
    if (!data) return;

    try {
      const response = await fetch('/account/send-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      const result = await response.json();
      if (result.success) {
        document.querySelector('#btnResendOTP').disabled = false;
        Swal.fire({
          title: 'Đã gửi OTP thành công!',
          text: 'Mã OTP đã được gửi đến email của bạn. Vui lòng kiểm tra hộp thư (kể cả thư rác).',
          icon: 'success',
          confirmButtonText: 'OK'
        });
      } else {
        Swal.fire({
          title: 'Lỗi!',
          text: result.message || 'Đã xảy ra lỗi khi gửi OTP',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    } catch (err) {
      console.error('Lỗi:', err);
      Swal.fire({
        title: 'Lỗi!',
        text: 'Đã xảy ra lỗi. Vui lòng thử lại sau',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    }
  });

  document.querySelector('#btnResendOTP').addEventListener('click', async function (event) {
    event.preventDefault();
    const data = await validateForm();
    if (!data) return;

    try {
      const response = await fetch('/account/send-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });
      const result = await response.json();
      if (result.success) {
        Swal.fire({
          title: 'Đã gửi OTP thành công!',
          text: 'Mã OTP mới đã được gửi đến email của bạn. Vui lòng kiểm tra hộp thư (kể cả thư rác).',
          icon: 'success',
          confirmButtonText: 'OK'
        });
      } else {
        Swal.fire({
          title: 'Lỗi!',
          text: result.message || 'Lỗi khi gửi OTP',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    } catch (err) {
      console.error('Lỗi:', err);
      Swal.fire({
        title: 'Lỗi!',
        text: 'Đã xảy ra lỗi. Vui lòng thử lại sau',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    }
  });

  document.querySelector('#frmRegister').addEventListener('submit', async function (event) {
    event.preventDefault();
    const otp = document.querySelector('#txtOTP').value;
    if (!otp) {
      Swal.fire({
        title: 'Lỗi!',
        text: 'Vui lòng nhập mã OTP',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return;
    }

    try {
      const response = await fetch('/account/verify-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ otp })
      });
      const result = await response.json();
      if (result.success) {
        Swal.fire({
          title: 'Thành công!',
          text: 'Đăng ký thành công! Bạn sẽ được chuyển hướng đến trang đăng nhập.',
          icon: 'success',
          confirmButtonText: 'OK'
        }).then(() => {
          window.location.href = '/account/signin';
        });
      } else {
        Swal.fire({
          title: 'Lỗi!',
          text: 'Mã OTP không hợp lệ',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    } catch (err) {
      console.error('Lỗi:', err);
      Swal.fire({
        title: 'Lỗi!',
        text: 'Đã xảy ra lỗi. Vui lòng thử lại sau',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    }
  });
</script>
{{/fill_section}}

<div class="card border-0 shadow-lg border-primary mx-auto" style="max-width: 500px;">
  <div class="card-header bg-white border-0 py-3">
    <h4 class="card-title mb-0 text-center">Đăng ký tài khoản</h4>
  </div>
  <div class="card-body p-4">
    <form method="post" id="frmRegister">
      <div class="mb-3">
        <label for="txtUsername" class="form-label fw-medium">Tên người dùng</label>
        <input type="text" class="form-control form-control-lg" id="txtUsername" name="username"
          placeholder="Nhập tên người dùng">
      </div>
      <div class="mb-3">
        <label for="txtEmail" class="form-label fw-medium">Email</label>
        <input type="email" class="form-control form-control-lg" id="txtEmail" name="email" placeholder="Nhập email">
      </div>
      <div class="mb-3">
        <label for="txtPassword" class="form-label fw-medium">Mật khẩu</label>
        <input type="password" class="form-control form-control-lg" id="txtPassword" name="password"
          placeholder="Nhập mật khẩu">
      </div>
      <div class="mb-3">
        <label for="txtConfirm" class="form-label fw-medium">Xác nhận mật khẩu</label>
        <input type="password" class="form-control form-control-lg" id="txtConfirm" name="confirm_pass"
          placeholder="Xác nhận mật khẩu">
      </div>
      <div class="mb-3">
        <label for="txtName" class="form-label fw-medium">Họ và tên</label>
        <input type="text" class="form-control form-control-lg" id="txtName" name="name" placeholder="Nhập họ và tên">
      </div>
      <div class="mb-3">
        <label for="txtBirthday" class="form-label fw-medium">Ngày sinh</label>
        <input type="date" class="form-control form-control-lg" id="txtBirthday" name="DOB">
      </div>
      <div class="mb-3">
        <label for="selPermission" class="form-label fw-medium">Phân quyền</label>
        <select class="form-select form-select-lg" id="selPermission" name="permission">
          <option value="0" selected>Học viên (Student)</option>
          <option value="1">Giảng viên (Instructor)</option>
        </select>
        <div class="form-text">Admin được cấp quyền riêng bởi hệ thống.</div>
      </div>
      <div class="mb-4">
        <label for="txtOTP" class="form-label fw-medium">Mã OTP</label>
        <input type="text" class="form-control form-control-lg mb-2" id="txtOTP" name="otp" placeholder="Nhập mã OTP">
        <div class="d-flex gap-2">
          <button type="button" class="btn btn-outline-primary" id="btnSendOTP">Gửi OTP</button>
          <button type="button" class="btn btn-outline-secondary" id="btnResendOTP" disabled>Gửi lại</button>
        </div>
      </div>

      <hr class="my-4">

      <button type="submit" class="btn btn-primary btn-lg w-100 py-2 fw-bold">
        <i class="bi bi-check-circle-fill me-2"></i> ĐĂNG KÝ
      </button>
    </form>
  </div>
</div>