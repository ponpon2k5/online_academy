<main class="container py-4">
    <div class="row g-4">
        <!-- Trái: video + điều hướng -->
        <div class="col-lg-8">
            <h1 class="h5 mb-1">{{courseTitle}}</h1>
            <div class="text-muted small mb-2">Khoá: {{current_lesson.lesson}}</div>

            <!-- Player: dùng URL dạng /embed/ID (không phải watch?v=) -->
            <div class="card">
                <div class="card-body p-2">
                    <div class="ratio ratio-16x9"> <!-- đổi 16x9 → 4x3 -->
                        <iframe id="yt-player" src="https://www.youtube.com/embed/{{current_lesson.video_url}}?enablejsapi=1&rel=0&modestbranding=1&playsinline=1"
                            allowfullscreen
                            loading="lazy">
                        </iframe>
                    </div>
                </div>
            </div>

            <!-- Điều hướng -->
            <div class="d-flex align-items-center gap-2 mt-3">
                {{#if prev_lesson_id}}
                <a class="btn btn-outline-secondary btn-sm"
                    href="/courses/preview-lessons/{{courseId}}?lesson={{prev_lesson_id}}">Bài trước</a>
                {{/if}}

                {{#if next_lesson_id}}
                <a class="btn btn-primary btn-sm"
                    href="/courses/preview-lessons/{{courseId}}?lesson={{next_lesson_id}}">Bài tiếp</a>
                {{/if}}

                <form method="post" action="/courses/lesson-complete/{{current_lesson.id}}" class="ms-auto">
                    <button class="btn btn-success btn-sm" type="submit">Hoàn thành</button>
                </form>
            </div>

            {{#if des_current_lesson}}
            <div class="card mt-3">
                <div class="card-header fw-semibold">Mô tả bài học</div>
                <div class="card-body">
                    <p class="mb-0 small">{{des_current_lesson}}</p>
                </div>
            </div>
            {{/if}}
        </div>

        <!-- Phải: danh sách bài học -->
        <div class="col-lg-4">
            <aside class="sticky-top" style="top: 80px;">
                <div class="card">
                    <div class="card-header">Danh sách bài học</div>
                    <div class="list-group list-group-flush">
                        {{#each lessons}}
                        <a class="list-group-item list-group-item-action d-flex justify-content-between align-items-center {{#if this.is_current}}active{{/if}}"
                            href="/courses/learn/{{course_id}}?lesson={{id}}">
                            <span>{{lesson}}</span>
                            <small class="text-muted">{{duration_seconds}}s</small>
                        </a>
                        {{/each}}
                    </div>
                </div>
            </aside>
        </div>
    </div>
</main>
<script src="https://www.youtube.com/iframe_api"></script>
<script>
    const LESSON_ID = "{{current_lesson.id}}";
    const RESUME = Number("{{resume_seconds}}") || 0;

    //player:đối tượng YouTube mà ta có thể điều khiển (pause, play, xem đang ở giây nào, …)
    //tick: là biến sẽ lưu “timer ID” của setInterval (để sau còn hủy đi khi cần).
    let player, tick;

    function onYouTubeIframeAPIReady() { // hàm YouTube gọi tự động khi iframe_api.js tải xong
        player = new YT.Player('yt-player', {
            events: {
                onReady: () => { // video tải xong
                    if (RESUME > 0) player.seekTo(Math.max(RESUME - 2, 0), true); //Nếu học viên đã xem được trước đó (VD: 180 giây), thì tua video đến chỗ đó – 2 giây để họ nhớ mạch nội dung.
                    tick = setInterval(saveTick, 5000); // lưu 5s/lần
                },
                onStateChange: (e) => {
                    const END = 0, PAUSED = 2;
                    if (e.data === END) saveNow(true);
                    if (e.data === PAUSED) saveNow(false);
                }
            }
        });
    }

    function saveTick() { saveNow(false); }

    function saveNow(done) {
        const t = Math.floor(player?.getCurrentTime?.() || 0); //Lấy số giây hiện tại mà video đang phát
        fetch('/courses/save-progress', { // gửi yêu cầu (request) đến một địa chỉ web (URL)và nhận phản hồi (response) từ server.
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ lesson_id: LESSON_ID, seconds: t, completed: !!done })
        }).catch(() => { });//thêm .catch() vào để “bắt lỗi”.
    }

    // Lưu khi rời trang (ít bị rớt)
    window.addEventListener('pagehide', () => { // Khi học viên tắt tab, refresh, hay chuyển trang, sự kiện pagehide được gọi
        try {
            const t = Math.floor(player?.getCurrentTime?.() || 0); //Math.floor() làm tròn
            navigator.sendBeacon('/courses/save-progress', new Blob( //là hàm đặc biệt của trình duyệt dùng để gửi dữ liệu nhỏ trước khi trang đóng
            //Ưu điểm: Không bị hủy giữa chừng như fetch() + Gửi rất nhanh và nhẹ.
                [JSON.stringify({ lesson_id: LESSON_ID, seconds: t })],
                { type: 'application/json' }
            ));
        } catch { } //thêm .catch() vào để “bắt lỗi”.
        if (tick) clearInterval(tick);
    });
</script>